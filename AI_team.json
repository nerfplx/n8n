{
  "name": "AI team",
  "nodes": [
    {
      "parameters": {
        "name": "createImage",
        "description": "Call this tool to create an image. ",
        "workflowId": {
          "__rl": true,
          "value": "lsZTPeThp35cB3Hs",
          "mode": "list",
          "cachedResultName": "Create Image"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "imagePrompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('imagePrompt', ``, 'string') }}",
            "imageTitle": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('imageTitle', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "imageTitle",
              "displayName": "imageTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "imagePrompt",
              "displayName": "imagePrompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1580,
        500
      ],
      "id": "f40914bf-901d-43bf-a5d8-7cab3a7610b5",
      "name": "Create Image"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1960,
        160
      ],
      "id": "b02e0e6c-03ea-43f4-af47-d35dff49e00c",
      "name": "Telegram",
      "webhookId": "fbdb3bd7-490b-4d3e-961e-e2d398294649",
      "credentials": {
        "telegramApi": {
          "id": "rCPnv6lqQn1yXYYN",
          "name": "Ai team bot"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1000,
        500
      ],
      "id": "89f7ff4e-03e3-437d-b793-41fd62b3f77f",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "name": "searchImages",
        "description": "Call this tool to search the image database.",
        "workflowId": {
          "__rl": true,
          "value": "zDYAKGCIEChJa1JH",
          "mode": "list",
          "cachedResultName": "Search Images"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "intent": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('intent', ``, 'string') }}",
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', ``, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "intent",
              "displayName": "intent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1900,
        500
      ],
      "id": "d8c4a8dc-0420-4051-a2c9-d2cb4f5a9cdd",
      "name": "Search Images"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "b78f1cea-5607-4271-992c-05575e13c27a",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        240
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "id": "4cf36d4e-a690-4758-88f2-531113f5a80e",
      "name": "Download Voice File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1040,
        80
      ],
      "webhookId": "c0b376b1-7b63-41b6-8063-0b3096b8333d",
      "credentials": {
        "telegramApi": {
          "id": "rCPnv6lqQn1yXYYN",
          "name": "Ai team bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "a1bd4a46-a367-468d-b975-c97120473142",
      "name": "Transcribe Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        1200,
        80
      ],
      "credentials": {
        "openAiApi": {
          "id": "fqd7a0TIMMd3kzfk",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "cc3b4a01-e46f-498b-a375-fdfae16e24f5",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        780,
        160
      ]
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "902d2cca-cf99-4a83-9bae-89138ccee603",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        640,
        160
      ],
      "webhookId": "99eab1a0-569d-4f0f-a49e-578a02abfe63",
      "credentials": {
        "telegramApi": {
          "id": "rCPnv6lqQn1yXYYN",
          "name": "Ai team bot"
        }
      }
    },
    {
      "parameters": {
        "name": "video",
        "description": "Call this tool to create a video.",
        "workflowId": {
          "__rl": true,
          "value": "7HwL0nnjhjdXJ3FY",
          "mode": "list",
          "cachedResultName": "Faceless Video"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "videoTopic": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('videoTopic', ``, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "videoTopic",
              "displayName": "videoTopic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1440,
        500
      ],
      "id": "d260e207-4366-494c-b231-48650f7ca360",
      "name": "Video"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=# Overview\nТы AI-агент маркетинговой команды. Твоя задача помогать пользователю создавать и редактировать изображения по запросу, а также создавать контент.\n\n## Tools\ncreateImage - Используйте это для создания изображения. Отправьте в этот инструмент описание нужного изображения.\neditImage - Используйте это для редактирования изображения. Пользователь может также сказать \"сделай\" вместо \"отредактируй\".\nImage Database - Используйте для поиска изображений в базе данных.\nvideo - Используйте для создания видео.\nThink - Используйте это, если нужно принять решение.\n\n## Instructions\nЕсли пользователь говорит «отредактируй это изображение» или «сделай это…», это значит, что нужно отредактировать последнее изображение в базе данных, самое недавнее.\n\n## Output\nОбязательно возвращай ссылку на изображение в виде кликабельной ссылки.\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1500,
        160
      ],
      "id": "89ddbf06-5619-455a-a7ab-420f3e981c7b",
      "name": "Marketing Team Agent"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        860,
        500
      ],
      "id": "bdd7809a-03ec-45ec-a3f7-788a89db716f",
      "name": "Think"
    },
    {
      "parameters": {
        "name": "editImage",
        "description": "Call this tool to edit an image.",
        "workflowId": {
          "__rl": true,
          "value": "nMBpMe21l4gDEjOI",
          "mode": "list",
          "cachedResultName": "Edit Image"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', ``, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "request": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('request', ``, 'string') }}",
            "pictureID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('pictureID', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "request",
              "displayName": "request",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "pictureID",
              "displayName": "pictureID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1740,
        500
      ],
      "id": "265388d3-5530-49fb-a5a9-5d290dd05050",
      "name": "Edit Image"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        720,
        500
      ],
      "id": "b2c5e72d-1495-4a3a-88ce-8d239585fd77",
      "name": "GPT 4o mini",
      "credentials": {
        "openRouterApi": {
          "id": "iN75NOiQwW6v2WyW",
          "name": "Open router ai team"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0",
          "mode": "list",
          "cachedResultName": "AI Images Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        860,
        1360
      ],
      "id": "04310249-a92f-4364-ac4b-0676cbb37c15",
      "name": "Image Database",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PFEfpjoMF7tx2NN3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "intent"
            },
            {
              "name": "image"
            },
            {
              "name": "chatID"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        540,
        1100
      ],
      "id": "69c187eb-7e58-4c5a-bdf8-b7a0b7ec8087",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Image: {{ $json.image }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# Overview\nТы агент по поиску изображений. Когда пользователь вводит запрос, твоя задача выполнить поиск в \"Image Database\" с использованием ключевых слов из запроса. Найди наиболее релевантное изображение.\n\n## Output\n- Верни название, ID и ссылку на изображение\n- Если изображение не найдено, выведи: «Не найдено»\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        820,
        1100
      ],
      "id": "9a4b9b32-a5d6-4e87-8bd4-4f4ec66018bf",
      "name": "Image Search Agent"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "44c36e1d-19e8-4411-bd3d-86c5144ecb14",
              "name": "response",
              "value": "Image wasn't found in the database",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1460,
        840
      ],
      "id": "2c9e9071-6087-4cdd-be8c-d7a2dbc34299",
      "name": "Not Found"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a5a9fd85-2403-423e-92a2-d3ba20db83d9",
              "leftValue": "={{ $('When Executed by Another Workflow').first().json.intent }}",
              "rightValue": "Get",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1480,
        1100
      ],
      "id": "9eb86d6f-45aa-42da-a067-7f4361fcb46f",
      "name": "Get?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "85e307aa-0bb8-40f1-b62e-5b36c231b0af",
              "leftValue": "={{ $json.output.status }}",
              "rightValue": "Not Found",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1220,
        1100
      ],
      "id": "325e08f6-4dc6-4e5e-8bac-259b65459a32",
      "name": "Not Found?"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.output.image_id }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1740,
        1100
      ],
      "id": "6a939929-d634-427b-9ae6-ff948453c27c",
      "name": "Download File",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "v3mgrtMVk1zrsIia",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"image_name\":\"string | null\",\n  \"image_id\": \"string | null\",\n  \"image_link\": \"string | null\",\n  \"status\": \"found | not_found\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1040,
        1360
      ],
      "id": "dbf0fc83-f4d3-44f4-9229-837f4c7b4295",
      "name": "Name, ID, & Link"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "be32fa20-d1e6-4831-a266-5991e5c4eb1e",
              "name": "imageName",
              "value": "={{ $json.output.image_name }}",
              "type": "string"
            },
            {
              "id": "10b5ddb9-a482-46a7-962f-8e18533d90d5",
              "name": "imageID",
              "value": "={{ $json.output.image_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1720,
        1340
      ],
      "id": "7f8f044e-e04d-4cc7-8b77-2d2334624bf1",
      "name": "Edit"
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('When Executed by Another Workflow').item.json.chatID }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2000,
        1100
      ],
      "id": "06c43aa9-7df1-40c0-98ca-a61db08e88f5",
      "name": "Send Photo",
      "webhookId": "85dc0064-e5c5-45a9-91a5-60e5b2bc4f1e",
      "credentials": {
        "telegramApi": {
          "id": "rCPnv6lqQn1yXYYN",
          "name": "Ai team bot"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        700,
        1360
      ],
      "id": "56d751c2-3839-4369-b568-0e28819c6718",
      "name": "GPT 4o-mini",
      "credentials": {
        "openRouterApi": {
          "id": "iN75NOiQwW6v2WyW",
          "name": "Open router ai team"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data[0].b64_json",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2980,
        1120
      ],
      "id": "bc6bd2e5-186d-427c-ad2d-04c5574e675a",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "gpt-image-1"
            },
            {
              "name": "prompt",
              "value": "={{ $json.output.replace(/\"/g, '') }}"
            },
            {
              "name": "size",
              "value": "1024x1024"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2800,
        1120
      ],
      "id": "e3e2f1a6-a4fe-4c0d-b79b-b5d5fda36431",
      "name": "Generate Image",
      "credentials": {
        "httpHeaderAuth": {
          "id": "7ejZGvsAbC2VCBpz",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.imagePrompt }}",
        "options": {
          "systemMessage": "=# Overview\nТы эксперт по созданию промтов для генерации изображений. Твоя задача взять простую тему или концепт изображения и расширить его до полноценно детализированного промта, который можно подать в модель генерации изображений по тексту.\n\n## Prompt Instructions\nТвой детализированный промт должен чётко описывать следующее:\n- Главный объект: На чём сосредоточено внимание изображения?\n- Фон/Окружение: Что происходит на заднем плане или в окружающей среде?\n- Стиль: Укажи визуальный стиль (например, гиперреализм, цифровая живопись, акварель, аниме, 3D-рендер и т.д.).\n- Настроение/Освещение: Опиши эмоциональный тон и свет (например, мягкий тёплый закат, мрачные грозовые облака, футуристические неоновые огни).\n- Дополнительные детали: Упомяни конкретные объекты, одежду, цвета, текстуры или характерные элементы, которые должны присутствовать.\n\n## Output Format\n- Начни с чистого, естественно звучащего описания, которое плавно объединяет все вышеперечисленные элементы.\n- Описание должно звучать так, как будто оно специально написано для ИИ, чтобы тот сгенерировал профессиональное, высококачественное изображение.\n- Избегай повторения исходной темы дословно, вместо этого переформулируй её в яркую сцену или визуальную концепцию.\n- Используй богатый, живой язык и образность.\n\n## Example\n- Input: \"Футуристический город\"\n- Output: \"Огромный футуристический город ночью, сияющий неоновыми огнями в оттенках синего и фиолетового. Высокие небоскрёбы с гладкими стеклянными фасадами выстраиваются вдоль горизонта. Летающие автомобили проносятся между зданиями под облачным, электрическим небом. Внизу улицы заполнены голографической рекламой и людьми в высокотехнологичной одежде. Стиль - цифровая живопись, высокая детализация, кинематографическая перспектива, мрачная атмосфера с мягкими неоновыми отражениями на мокром асфальте.\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2420,
        1120
      ],
      "id": "65dc2a25-459c-43b0-becc-3d74a7887f04",
      "name": "Image Prompt"
    },
    {
      "parameters": {
        "name": "={{ $('When Executed by Another Workflow').item.json.imageTitle }}.png",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1TgQu-5hlOzO1X28TMMzLxfhunhPSUIqy",
          "mode": "list",
          "cachedResultName": "AI Image Generation",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1TgQu-5hlOzO1X28TMMzLxfhunhPSUIqy"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3280,
        1260
      ],
      "id": "0a3a51e9-c1b9-4385-a66e-cabe996130e2",
      "name": "Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "v3mgrtMVk1zrsIia",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0",
          "mode": "list",
          "cachedResultName": "Marketing Team Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Request": "={{ $('When Executed by Another Workflow').item.json.imagePrompt }}",
            "ID": "={{ $json.id }}",
            "Link": "={{ $json.webViewLink }}",
            "Title": "={{ $('When Executed by Another Workflow').item.json.imageTitle }}",
            "Type": "Image"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Request",
              "displayName": "Request",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Post",
              "displayName": "Post",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3500,
        1260
      ],
      "id": "f666d86d-2634-49a6-a27b-1ee09069617e",
      "name": "Image Log",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PFEfpjoMF7tx2NN3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('When Executed by Another Workflow').item.json.chatID }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3280,
        980
      ],
      "id": "60da5b92-728b-4f8b-847b-e12ba44af461",
      "name": "Send Photo1",
      "webhookId": "8fcbda9c-8396-41f7-8f2d-39e4ae4337c7",
      "credentials": {
        "telegramApi": {
          "id": "rCPnv6lqQn1yXYYN",
          "name": "Ai team bot"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        2440,
        1360
      ],
      "id": "fa2b6729-1bf8-469a-a80e-eeabf65f8d96",
      "name": "GPT 4o-mini1",
      "credentials": {
        "openRouterApi": {
          "id": "iN75NOiQwW6v2WyW",
          "name": "Open router ai team"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.piapi.ai/api/v1/task/{{ $json.data.task_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3300,
        100
      ],
      "id": "327dfac7-3e6f-437a-bac7-2c7dec527d00",
      "name": "Get Images",
      "credentials": {
        "httpHeaderAuth": {
          "id": "7ejZGvsAbC2VCBpz",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Scene: {{ $('Get Images').item.json.data.input.prompt }}",
        "options": {
          "systemMessage": "=# Overview\nТы - мастер по созданию звуковых промтов.\nТвоя задача - создавать яркие, атмосферные звуковые промты на основе заданной сцены. Эти промты будут использоваться для генерации фонового звука, соответствующего настроению и окружению сцены.\n\n## Instructions\n- Сгенерируй промт длиной от одного до двух предложений, передающий атмосферу, тон и ключевые звуковые элементы.\n- Используй насыщенный, выразительный язык для описания фоновой звуковой среды, подчёркивая конкретные звуки (например, шаги по брусчатке, далёкие разговоры, шелест листвы на ветру, приглушённая музыка, индустриальный гул).\n- Сосредоточься именно на фоновой аудиосреде - не описывай диалоги, озвучку или звуковые эффекты на переднем плане.\n- Промт должен точно соответствовать эмоциональному состоянию и обстановке сцены, будь то спокойствие, хаос, тревожность, праздник или умиротворение.\n- Избегай расплывчатых описаний, используй конкретные и чувственные детали для максимального погружения.\n- Никогда не используй кавычки (\"\") или символы новой строки (\\n) в тексте.\n\n## Output\nВыводи только готовый звуковой промт, подходящий для подачи в модель генерации аудио.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        3560,
        100
      ],
      "id": "cb09d778-dc9a-4df7-b33c-707daa0bad76",
      "name": "Sound Agent"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.elevenlabs.io/v1/sound-generation",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.output.replace(/\"/g, '') }}"
            },
            {
              "name": "duration_seconds",
              "value": "5"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3920,
        100
      ],
      "id": "c8efcf8d-545d-4076-b70b-06a2a121018d",
      "name": "Generate Audio",
      "credentials": {
        "httpHeaderAuth": {
          "id": "7ejZGvsAbC2VCBpz",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "name": "={{ $('Get Videos').item.json.id }}.mp3",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1hhZhHBv0zm3adye9LE_sxwme7z7yUXw5",
          "mode": "list",
          "cachedResultName": "Audio Files",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1hhZhHBv0zm3adye9LE_sxwme7z7yUXw5"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        4100,
        100
      ],
      "id": "67210387-676f-4e55-a1d2-faefd69056ec",
      "name": "Upload to Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "v3mgrtMVk1zrsIia",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "numberInputs": 3,
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        3580,
        440
      ],
      "id": "f83c8573-166d-49b3-ac97-171c26277de7",
      "name": "Merge"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.creatomate.com/v1/renders",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"template_id\": \"e19f26a1-dfb6-4a0d-a3ba-d394e398b3c9\",\n  \"modifications\": {\n    \"Video-1.source\": \"{{ $json.urls[0].url }}\",\n    \"Video-2.source\": \"{{ $json.urls[1].url }}\",\n    \"Video-3.source\": \"{{ $json.urls[2].url }}\",\n    \"Video-4.source\": \"{{ $json.urls[3].url }}\",\n    \"Audio-1.source\": \"{{ $json.urls[0].webContentLink }}\",\n    \"Audio-2.source\": \"{{ $json.urls[1].webContentLink }}\",\n    \"Audio-3.source\": \"{{ $json.urls[2].webContentLink }}\",\n    \"Audio-4.source\": \"{{ $json.urls[3].webContentLink }}\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3980,
        440
      ],
      "id": "6f77ce1b-b7f9-4215-8dc7-d2f3015e6ffb",
      "name": "Render Video"
    },
    {
      "parameters": {
        "amount": 25
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4180,
        440
      ],
      "id": "b339004b-7091-4c4e-911b-8ccd0538b0cf",
      "name": "25 Seconds",
      "webhookId": "d5cd29e8-d3f7-491c-a6b6-2d705aa47931"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3580,
        660
      ],
      "id": "23402c43-2f6e-4ab7-9a44-31bf66207bd7",
      "name": "Download Video"
    },
    {
      "parameters": {
        "url": "=https://api.dev.runwayml.com/v1/tasks/{{ $json.id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Runway-Version",
              "value": "2024-11-06"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3300,
        380
      ],
      "id": "1d6569da-2d3b-498e-b1a4-bbea20d19fc6",
      "name": "Get Videos",
      "credentials": {
        "httpHeaderAuth": {
          "id": "7ejZGvsAbC2VCBpz",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.dev.runwayml.com/v1/image_to_video",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Runway-Version",
              "value": "2024-11-06"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "promptImage",
              "value": "={{ $json.data.output.image_url }}"
            },
            {
              "name": "model",
              "value": "gen3a_turbo"
            },
            {
              "name": "ratio",
              "value": "768:1280"
            },
            {
              "name": "duration",
              "value": "5"
            },
            {
              "name": "promptText",
              "value": "={{ $json.data.input.prompt.replace(/\"/g, '') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2960,
        380
      ],
      "id": "ce30f9a1-292d-42d0-91dc-72e0883dc3fe",
      "name": "Generate Videos",
      "credentials": {
        "httpHeaderAuth": {
          "id": "7ejZGvsAbC2VCBpz",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let inputArray;\nif (items.length === 1 && Array.isArray(items[0].json)) {\n\n  inputArray = items[0].json;\n} else if (items.length > 1) {\n\n  inputArray = items.map(item => item.json || item);\n} else {\n  throw new Error('Input structure not recognized. Please check your data format.');\n}\n\nconst urlArray = [];\n\nfor (const item of inputArray) {\n\n  const data = item;\n  \n\n  if (data.output && Array.isArray(data.output)) {\n\n    for (const url of data.output) {\n\n      urlArray.push({\n        url: url,\n        sourceId: data.id,\n        createdAt: data.createdAt,\n        webContentLink: data.webContentLink || null\n      });\n    }\n  }\n}\n\nreturn [{\n  json: {\n    urls: urlArray\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3780,
        440
      ],
      "id": "b201e222-aac9-4bc7-a514-d66032d27140",
      "name": "Split Out Parts"
    },
    {
      "parameters": {
        "operation": "share",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.id }}",
          "mode": "id"
        },
        "permissionsUi": {
          "permissionsValues": {
            "role": "reader",
            "type": "anyone",
            "allowFileDiscovery": true
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        4300,
        100
      ],
      "id": "cd2483a8-e552-4141-876d-6df623d6dd14",
      "name": "Share File",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "v3mgrtMVk1zrsIia",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"Part 1\": \"Prompt for part 1\",\n  \"Part 2\": \"Prompt for part 2\",\n  \"Part 3\": \"Prompt for part 3\",\n  \"Part 4\": \"Prompt for part 4\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2560,
        340
      ],
      "id": "0acdb887-4345-4e80-9b48-2f547bd593f2",
      "name": "4 Parts"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Video Topic: {{ $json.videoTopic }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# Overview\nТы Master Visual Story Structuring Agent.\nТвоя задача - взять заданную тему короткого видео и разделить её на четыре части, которые вместе формируют цельную, яркую историю, оптимизированную для генерации изображений по тексту.\n\n## Instructions:\n- Ты должен создать ровно четыре части: Часть 1, Часть 2, Часть 3 и Часть 4.\nОписание главного персонажа или объекта истории должно быть ТОЧНО одинаковым во всех четырёх частях. Последовательность и единообразие обязательны.\n- Каждая часть должна логически продолжать предыдущую, чтобы к концу получилась полноценная визуальная история.\n- Каждая часть должна быть написана как высококачественный, детализированный промт для генерации изображений, по профессиональным стандартам моделей.\n- В описании нужно ярко и точно передавать персонажей, обстановку, одежду, действия и элементы фона.\n- Используйте богатый, образный язык, чтобы достичь максимальной визуальной выразительности.\n- Избегай общих, расплывчатых формулировок, всегда выбирай конкретные и выразительные описания.\n- НЕ используйте кавычки (\"\") или символы новой строки (\\n) в тексте.\n- Описание должно звучать естественно и быть готовым для прямой подачи в модель генерации изображений.\n\n## Key Elements to Include in Each Part:\n- Чёткое описание главных героев (внешность, одежда, выражение лица, позы)\n- Аксессуары или предметы, добавляющие сцене смысл\n- Яркий фон, который соответствует теме и усиливает атмосферу\n- Последовательность и логичное развитие действия от части к части\n\n## Output Format:\nОтвет должен быть структурирован в четыре поля:\n- Часть 1: [Яркое описание изображения для части 1]\n- Часть 2: [Яркое описание изображения для части 2]\n- Часть 3: [Яркое описание изображения для части 3]\n- Часть 4: [Яркое описание изображения для части 4]\n\nВыводи только эти поля.\nУбедись, что история во всех четырёх частях выглядит связной, визуально насыщенной и кинематографичной."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        2360,
        160
      ],
      "id": "d8965c80-77f7-409a-ac4b-0ac377524fa7",
      "name": "Image Prompt Agent"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2680,
        160
      ],
      "id": "7b6c1430-7687-4fe8-ada0-642ed170da95",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "sendVideo",
        "chatId": "={{ $('When Executed by Another Workflow').first().json.chatID }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3760,
        660
      ],
      "id": "01117add-2e26-48df-ae50-799a87197139",
      "name": "Send Video",
      "webhookId": "cdeb2987-d275-480b-8532-f69bbed64999",
      "credentials": {
        "telegramApi": {
          "id": "rCPnv6lqQn1yXYYN",
          "name": "Ai team bot"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Video: {{ $('When Executed by Another Workflow').first().json.videoTopic }}"
            },
            {
              "content": "Create a 3-4 word title for the given video",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        3960,
        660
      ],
      "id": "88c7c70b-613f-40a5-8d21-e00ad8a48f5d",
      "name": "Title",
      "credentials": {
        "openAiApi": {
          "id": "fqd7a0TIMMd3kzfk",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0",
          "mode": "list",
          "cachedResultName": "Marketing Team Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Title": "={{ $json.message.content }}",
            "Request": "={{ $('When Executed by Another Workflow').first().json.videoTopic }}",
            "Link": "={{ $('Download Video').item.json.url }}",
            "Type": "Video"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Request",
              "displayName": "Request",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Post",
              "displayName": "Post",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        4320,
        660
      ],
      "id": "882331d2-00df-4a6a-b35e-6b217e66dae2",
      "name": "Log Video",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PFEfpjoMF7tx2NN3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "amount": 90
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3120,
        100
      ],
      "id": "8a9972bb-e3c8-465d-a591-89665b8e1e2d",
      "name": "90 Seconds",
      "webhookId": "ffdc5132-c0fe-44f6-af2b-4b3bb8894153"
    },
    {
      "parameters": {
        "amount": 90
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3120,
        380
      ],
      "id": "1f575ae3-9f75-477a-aeeb-6cebebe9ef09",
      "name": "90_Seconds",
      "webhookId": "3ce99001-8f5a-4c0a-9b25-e3e261fcc778"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        3580,
        280
      ],
      "id": "ee9f5a57-788a-4663-8d2a-6942a62f3435",
      "name": "GPT-4o-mini",
      "credentials": {
        "openRouterApi": {
          "id": "iN75NOiQwW6v2WyW",
          "name": "Open router ai team"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.piapi.ai/api/v1/task",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"model\": \"Qubico/flux1-dev\",\n    \"task_type\": \"txt2img\",\n    \"input\": {\n        \"prompt\": \"{{ $json.output.replace(/\"/g, '') }}\",\n        \"width\": 540, \n        \"height\": 960\n    } \n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2940,
        100
      ],
      "id": "4490e6fa-6345-4b45-b65c-e02559e68617",
      "name": "Generate Image1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "7ejZGvsAbC2VCBpz",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        2360,
        340
      ],
      "id": "a079f25d-8a2c-410e-bbe3-9abb5b3a85c1",
      "name": "GPT 4o-mini3",
      "credentials": {
        "openRouterApi": {
          "id": "iN75NOiQwW6v2WyW",
          "name": "Open router ai team"
        }
      }
    },
    {
      "parameters": {
        "name": "={{ $('When Executed by Another Workflow').item.json.image }} (Edited).png",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1TgQu-5hlOzO1X28TMMzLxfhunhPSUIqy",
          "mode": "list",
          "cachedResultName": "AI Image Generation",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1TgQu-5hlOzO1X28TMMzLxfhunhPSUIqy"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        3200,
        1820
      ],
      "id": "a75c22c1-de71-4185-9e4d-879fab422851",
      "name": "Upload Image",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "v3mgrtMVk1zrsIia",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.pictureID }}",
          "mode": "id"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        2420,
        1680
      ],
      "id": "ad886b77-a508-4b18-92c5-e1bd1162a19d",
      "name": "Download",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "v3mgrtMVk1zrsIia",
          "name": "Google Drive account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images/edits",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "image",
              "inputDataFieldName": "data"
            },
            {
              "name": "prompt",
              "value": "={{ $('When Executed by Another Workflow').item.json.request.replace(/\"/g, '') }}"
            },
            {
              "name": "model",
              "value": "gpt-image-1"
            },
            {
              "name": "size",
              "value": "1024x1024"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2680,
        1680
      ],
      "id": "89a5211c-8cb5-4c8b-ac1e-8fa355e7b285",
      "name": "Edit Image1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "7ejZGvsAbC2VCBpz",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data[0].b64_json",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        2900,
        1680
      ],
      "id": "eb35eaba-2e60-42cb-b671-075e8af068eb",
      "name": "Convert to File1"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0",
          "mode": "list",
          "cachedResultName": "Marketing Team Log",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JqOTd49heNBdmrf5hSwxI66X724tspAmSjzWoA6-EU0/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Request": "={{ $('When Executed by Another Workflow').item.json.request }}",
            "ID": "={{ $json.id }}",
            "Link": "={{ $json.webViewLink }}",
            "Title": "={{ $('When Executed by Another Workflow').item.json.image }}",
            "Type": "Edit"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Title",
              "displayName": "Title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Type",
              "displayName": "Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Request",
              "displayName": "Request",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ID",
              "displayName": "ID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Link",
              "displayName": "Link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Post",
              "displayName": "Post",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        3440,
        1820
      ],
      "id": "b311c10f-e315-4b23-9c94-6a90c19dbbed",
      "name": "Image Log1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PFEfpjoMF7tx2NN3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('When Executed by Another Workflow').item.json.chatID }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        3200,
        1560
      ],
      "id": "f48f2ce2-857b-4856-9964-cb1b5f041251",
      "name": "Send Photo2",
      "webhookId": "85dc0064-e5c5-45a9-91a5-60e5b2bc4f1e",
      "credentials": {
        "telegramApi": {
          "id": "rCPnv6lqQn1yXYYN",
          "name": "Ai team bot"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Create Image": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Search Images": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Download Voice File": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set 'Text'": {
      "main": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Marketing Team Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Edit Image": {
      "ai_tool": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GPT 4o mini": {
      "ai_languageModel": [
        [
          {
            "node": "Marketing Team Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Image Database": {
      "ai_tool": [
        [
          {
            "node": "Image Search Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Image Search Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Search Agent": {
      "main": [
        [
          {
            "node": "Not Found?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get?": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Not Found?": {
      "main": [
        [
          {
            "node": "Not Found",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Send Photo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Name, ID, & Link": {
      "ai_outputParser": [
        [
          {
            "node": "Image Search Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "GPT 4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Image Search Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Photo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Image Prompt": {
      "main": [
        [
          {
            "node": "Generate Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Image Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT 4o-mini1": {
      "ai_languageModel": [
        [
          {
            "node": "Image Prompt",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get Images": {
      "main": [
        [
          {
            "node": "Generate Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sound Agent": {
      "main": [
        [
          {
            "node": "Generate Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Audio": {
      "main": [
        [
          {
            "node": "Upload to Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload to Drive": {
      "main": [
        [
          {
            "node": "Share File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Split Out Parts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Render Video": {
      "main": [
        [
          {
            "node": "25 Seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "25 Seconds": {
      "main": [
        [
          {
            "node": "Download Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Video": {
      "main": [
        [
          {
            "node": "Send Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Videos": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          },
          {
            "node": "Sound Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Videos": {
      "main": [
        [
          {
            "node": "90_Seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Parts": {
      "main": [
        [
          {
            "node": "Render Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Share File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "4 Parts": {
      "ai_outputParser": [
        [
          {
            "node": "Image Prompt Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Image Prompt Agent": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Generate Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Video": {
      "main": [
        [
          {
            "node": "Title",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Title": {
      "main": [
        [
          {
            "node": "Log Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "90 Seconds": {
      "main": [
        [
          {
            "node": "Get Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "90_Seconds": {
      "main": [
        [
          {
            "node": "Get Videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT-4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Sound Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Generate Image1": {
      "main": [
        [
          {
            "node": "90 Seconds",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GPT 4o-mini3": {
      "ai_languageModel": [
        [
          {
            "node": "Image Prompt Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Upload Image": {
      "main": [
        [
          {
            "node": "Image Log1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download": {
      "main": [
        [
          {
            "node": "Edit Image1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Image1": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "Send Photo2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Upload Image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7ef2fbd4-710d-43a4-93f8-f8066d0b60db",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d488a8043ab3e0416f6f989e983a31cdee3956c92eaa78f4470df6b3bb8d093a"
  },
  "id": "GNkRbG7om7gqZYui",
  "tags": []
}